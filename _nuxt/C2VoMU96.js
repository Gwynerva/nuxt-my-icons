function u(t){let e=2166136261,o=13871;for(let n=0;n<t.length;n++){const a=t.charCodeAt(n);e^=a;const i=e*147,l=i/4294967296|0;e=i>>>0,o=o*147+l+e*1048576>>>0}return(o>>>0).toString(16).padStart(8,"0")+(e>>>0).toString(16).padStart(8,"0")}function g(t){const s=new RegExp(`<svg((?=\\s)(?!(?:[^>"\\']|"[^"]*"|\\'[^\\']*\\')*?(?<=\\s)(?:term|range)\\s*=)(?!\\s*\\/?>)\\s+(?:".*?"|\\'.*?\\'|[^>]*?)+|\\s*)>`),r=t.match(s);if(!r)throw new Error("Invalid SVG: No <svg> tag found!");const e=["id","version","xmlns","width","height"],o=r[1].split(/\s+/).filter(n=>{if(!n.trim())return!1;for(const a of e)if(n.startsWith(a))return!1;return!0}),c=t.replace(s,"<symbol{{ attributes }}>").replace(/<\/svg>/,"</symbol>");return{attributes:o,template:c}}function h(t,s){const r=[...s?[`id="${s}"`]:[],...t.attributes],e=r.length?" "+r.join(" "):"";return t.template.replace("{{ attributes }}",e)}function p(t){return u(h(t))}let f=0;function I(t){let s={};t.replaceAll(/id="([^"]+)"/gm,(r,e)=>(s[e]=e+"__"+ ++f,r));for(const[r,e]of Object.entries(s))t=t.replaceAll(r,e);return t}export{h as c,p as g,I as m,g as p};
