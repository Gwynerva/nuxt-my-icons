function l(t){let r=2166136261,o=13871;for(let n=0;n<t.length;n++){const a=t.charCodeAt(n);r^=a;const c=r*147,h=c/4294967296|0;r=c>>>0,o=o*147+h+r*1048576>>>0}return(o>>>0).toString(16).padStart(8,"0")+(r>>>0).toString(16).padStart(8,"0")}function g(t){const s=new RegExp(`<svg((?=\\s)(?!(?:[^>"\\']|"[^"]*"|\\'[^\\']*\\')*?(?<=\\s)(?:term|range)\\s*=)(?!\\s*\\/?>)\\s+(?:".*?"|\\'.*?\\'|[^>]*?)+|\\s*)>`),e=t.match(s);if(!e)throw new Error("Invalid SVG: No <svg> tag found!");const r=["id","version","xmlns","width","height"],o=e[1].split(/\s+/).filter(n=>{if(!n.trim())return!1;for(const a of r)if(n.startsWith(a))return!1;return!0}),i=t.replace(s,"<symbol{{ attributes }}>").replace(/<\/svg>/,"</symbol>");return{attributes:o,template:i}}function u(t,s){const e=[...s?[`id="${s}"`]:[],...t.attributes],r=e.length?" "+e.join(" "):"";return t.template.replace("{{ attributes }}",r)}function f(t){return l(u(t))}export{u as c,f as g,g as p};
